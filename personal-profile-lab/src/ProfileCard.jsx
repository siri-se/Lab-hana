import "./ProfileCard.css";
import React, { useState } from "react";

function ProfileCard({ profile }) {
  //interactive
  const [viewCount, setViewCount] = useState(0);
  const [favoriteHobbies, setFavoriteHobbies] = useState([]);
  const [showContactForm, setShowContactForm] = useState(false);

  const handleCardClick = () => {
    // TODO: ‡πÄ‡∏û‡∏¥‡πà‡∏° view count
    setViewCount(prev => prev + 1);
  };

  const toggleFavoriteHobby = (hobby) => {
    // TODO: ‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö hobby ‡∏à‡∏≤‡∏Å favorites
    setFavoriteHobbies(prev =>
        prev.includes(hobby)
            ? prev.filter(h => h !== hobby)
            : [...prev, hobby]
    );
  };

  //form subnit
  const handleSubmitContact = (e) => {
    e.preventDefault();
    alert("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
    setShowContactForm(false);
 };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Avatar (‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠)
  const getInitials = (name) => {
    return name
      .split(" ")
      .map((n) => n[0])
      .join("")
      .toUpperCase();
  };

  //Darkmode
  const [isDarkMode, setIsDarkMode] = useState(false);

  const toggleTheme = () => {
    setIsDarkMode(!isDarkMode);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° Contact
  const handleContactClick = (e) => {
    // TODO: ‡πÅ‡∏™‡∏î‡∏á contact form ‡πÅ‡∏ó‡∏ô alert
     e.stopPropagation();
    setShowContactForm(true);
};

  // TODO: ‡πÄ‡∏û‡∏¥‡πà‡∏° className conditionally
  const cardClassName = `profile-card ${isDarkMode ? "dark-mode" : ""}`;

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà skill
  const handleSkillClick = (skill) => {
    alert(`${profile.name} ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÉ‡∏ô ${skill}!`);
  };

  // TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡πÅ‡∏•‡∏∞ functions ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô Challenge

  return (
    <div className={cardClassName} onClick={handleCardClick}>
      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß - ‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠ */}
      <div className="profile-header">
        {/* Dark Mode Toggle */}
        <button className="theme-toggle" onClick={toggleTheme}>
          {isDarkMode ? "üåô" : "‚òÄÔ∏è"}
        </button>

        <div className="profile-avatar">{getInitials(profile.name)}</div>
        <h1 className="profile-name">{profile.name}</h1>
        <div className="student-id">{profile.studentId}</div>
      </div>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */}
      <div className="profile-info">
        <div className="info-item">
          <div className="info-label">‡∏™‡∏≤‡∏Ç‡∏≤</div>
          <div className="info-value">{profile.major}</div>
        </div>
        <div className="info-item">
          <div className="info-label">‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ</div>
          <div className="info-value">{profile.year}</div>
        </div>
        <div className="info-item">
          <div className="info-label">‡∏≠‡∏≤‡∏¢‡∏∏</div>
          <div className="info-value">{profile.age} ‡∏õ‡∏µ</div>
        </div>
        <div className="info-item">
          <div className="info-label">‡πÄ‡∏Å‡∏£‡∏î</div>
          <div className="info-value">
            {profile.gpa.toFixed(2)}
            {profile.gpa >= 3.5 && " üåü"}
          </div>
        </div>
      </div>

      {/* Achievement Badges - ‡∏´‡∏•‡∏±‡∏á info section */}
      <div className="profile-section">
        <h3>üèÜ Achievements</h3>
        <div className="achievements">
          {/* TODO: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏™‡∏î‡∏á badges */}
          {profile.gpa >= 3.5 && (
            <span className="achievement-badge" title="GPA ‚â• 3.5">
              üåü ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°
            </span>
          )}
          {profile.skills.length >= 5 && (
            <span
              className="achievement-badge"
              title="Mastered 5 or more skill"
            >
              üí™ Multi-skilled
            </span>
          )}
          {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° achievement ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏≠‡∏∑‡πà‡∏ô‡πÜ */}
          {profile.major === "‡∏ß‡∏¥‡∏®‡∏ß‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå" && (
            <span className="achievement-badge" title="Start a cruel destiny">
              ‚õìÔ∏è Software Slave
            </span>
          )}
          {profile.year === 2 && (
            <span className="achievement-badge" title="Survived untill year 2">
              üî• High way to hell
            </span>
          )}
        </div>
      </div>

      {/* ‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å */}
      <div className="profile-section">
        <h3>üéØ ‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å</h3>
        <ul className="hobbies-list">
          {profile.hobbies.map((hobby, index) => (
            <li 
                key={index} 
                className={`hobby-item ${favoriteHobbies.includes(hobby) ? 'favorite' : ''}`}
                onClick={(e) => { e.stopPropagation(); toggleFavoriteHobby(hobby); }}
            >
              {hobby} {favoriteHobbies.includes(hobby) && 'üíñ'}
            </li>
          ))}
        </ul>
      </div>

      {/* ‡∏ó‡∏±‡∏Å‡∏©‡∏∞ */}
      <div className="profile-section">
        <h3>üíª ‡∏ó‡∏±‡∏Å‡∏©‡∏∞</h3>
        <div className="skills">
          {profile.skills.map((skill, index) => (
            <div
              key={index}
              className="skill-tag"
              onClick={() => handleSkillClick(skill)}
            >
              {skill}
            </div>
          ))}
        </div>
      </div>

      {/* TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° sections ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô Challenge */}
      {/* Social Links - ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏á */}
      {profile.socialLinks && profile.socialLinks.length > 0 && (
        <div className="profile-section">
          <h3>üåê Social Media</h3>
          <div className="social-links">
            {profile.socialLinks.map((link, index) => (
              <a
                key={index}
                href={link.url}
                target="_blank"
                rel="noopener noreferrer"
                className="social-link"
              >
                {link.platform}
              </a>
            ))}
          </div>
        </div>
      )}

      {/* ‡∏õ‡∏∏‡πà‡∏° Contact */}
      <button className="contact-button" onClick={handleContactClick}>
        üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ {profile.name}
      </button>
      {showContactForm && (
        <div className="contact-form">
          <form onSubmit={handleSubmitContact}>
            <input type="text" placeholder="‡∏ä‡∏∑‡πà‡∏≠" required />
            <input type="email" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" required />
            <textarea placeholder="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°" required></textarea>
            <button type="submit">‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
          </form>
        </div>
      )}

      <div className="view-counter">
        üëÅÔ∏è Views: {viewCount}
      </div>
    </div>
  );
}

export default ProfileCard;
